package com.gohool.patel.guessthecapital;

import android.graphics.drawable.ColorDrawable;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.android.volley.AuthFailureError;
import com.android.volley.ClientError;
import com.android.volley.NetworkError;
import com.android.volley.NoConnectionError;
import com.android.volley.ParseError;
import com.android.volley.Request;
import com.android.volley.RequestQueue;
import com.android.volley.Response;
import com.android.volley.ServerError;
import com.android.volley.TimeoutError;
import com.android.volley.VolleyError;
import com.android.volley.toolbox.JsonArrayRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

public class MainActivity extends AppCompatActivity {

    private TextView countryName;
    private TextView guess;
    private Button nextButton;
    private Button enterButton;
    private RequestQueue mQueue;
    String Name = "";
    int points = 0;


    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        getSupportActionBar().setTitle("CapitalQuiz");
        getSupportActionBar().setBackgroundDrawable(new ColorDrawable(getResources().getColor(R.color.titleBlue)));
        countryName = findViewById(R.id.countryNameID);
        guess = findViewById(R.id.guessID);
        nextButton = findViewById(R.id.nextButton);
        enterButton = findViewById(R.id.enterButton);
        mQueue = Volley.newRequestQueue(this);
        nextButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                getRandomCountry();

            }
        });
        enterButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                String countryNameDisplay = countryName.getText().toString();
                getCapital(countryNameDisplay);
            }
        });

    }

    public void getRandomCountry(){
//generates a random country by sending a get request to the rest countries api
        //parses the returned json array to index of a randomly generated number
        final int random = (int)(Math.random() * 190 + 1);
        String url = "https://restcountries.eu/rest/v2/all";
        JsonArrayRequest request = new JsonArrayRequest(Request.Method.GET, url, null,
                new Response.Listener<JSONArray>() {
                    @Override
                    public void onResponse(JSONArray response) {
                        try {
                            Log.d("issue","issue inside");
                                JSONObject employee = response.getJSONObject(random);
                                Name = employee.getString("name");
                                countryName.setText(Name);
                            } catch (JSONException e1) {
                            e1.printStackTrace();
                        }
                    }
                }, new Response.ErrorListener() {
            @Override
            public void onErrorResponse(VolleyError error) {
                if( error instanceof NetworkError) {
                } else if( error instanceof ClientError) {
                } else if( error instanceof ServerError) {
                } else if( error instanceof AuthFailureError) {
                } else if( error instanceof ParseError) {
                } else if( error instanceof NoConnectionError) {
                } else if( error instanceof TimeoutError) {
                }

                Log.d("error", error.getMessage());

            }
        });
        mQueue.add(request);
    }

   public void getCapital(String name){
       //this function sends a get request to the restcountries api to using the country name generated by the
       //function getRandom country. The returned array is then parsed to get the name of the capital
       //when the enter button is pressed the capital name and country name are
       String url = "https://restcountries.eu/rest/v2/name/" + name + "";
       JsonArrayRequest request = new JsonArrayRequest(Request.Method.GET, url, null,
               new Response.Listener<JSONArray>() {
                   @Override
                   public void onResponse(JSONArray response) {
                       try {
                           JSONObject jsonobj = response.getJSONObject(0);
                           Log.d("output",jsonobj.toString());
                               String CN = jsonobj.getString("capital");
                               CN = CN.toLowerCase();
                               Log.d("answer",CN);
                               Log.d("guess",guess.getText().toString());
                               if (guess.getText().toString().toLowerCase().equals(CN))
                               {
                                   guess.setText("");
                                   countryName.setText(getResources().getString(R.string.correct));
                               }
                               else
                               {
                                   guess.setText("");
                                   countryName.setText(getResources().getString(R.string.incorrect));
                               }

                           } catch (JSONException e1) {
                           e1.printStackTrace();
                       }
                   }

               }, new Response.ErrorListener() {
           @Override
           public void onErrorResponse(VolleyError error) {
               if( error instanceof NetworkError) {
               } else if( error instanceof ClientError) {
               } else if( error instanceof ServerError) {
               } else if( error instanceof AuthFailureError) {
               } else if( error instanceof ParseError) {
               } else if( error instanceof NoConnectionError) {
               } else if( error instanceof TimeoutError) {
               }
           }
       });

       mQueue.add(request);
   }

}
